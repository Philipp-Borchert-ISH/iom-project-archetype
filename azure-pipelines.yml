# trigger build for every branch
#trigger:
#- feature/65868-iom-bootstrap-project

pool: 'ubuntu-20.4-DS2_v2-adopt-jdk'
variables:
  M2_LOCAL_REPO: $(Pipeline.Workspace)/local-maven-repo
  MAVEN_OPTS: '-Dmaven.repo.local=$(M2_LOCAL_REPO)'
  #IOM_DOCKERHUB_HOST: intershophub
  #IOM_REPO_NAME: "intershophub/"
  IOM_DOCKERHUB_CONNECTION: release-dockerhub

  # Helm Repo URL
  IOM_HELM_CHART_REPO_URL: git://Products/order-iom-helm
  IOM_HELM_CHART_BRANCH: develop
  IOM_HELM_CHART_PATH: helm
  HELM_RELEASE_NAME: archetype-test-$(Build.BuildId)

  # ACR
  IOM_CI_ACR_HOST: iomci.azurecr.io
  IOM_CI_ACR_CONNECTION: order-iomci-ISH-ENG-IOM

  IOM_INTERNAL_ACR_HOST: iominternalacr.azurecr.io
  IOM_INTERNAL_ACR_CONNECTION: order-iomInternalACR-ISH-ENG-IOM

  # wrap environment variables for build_image.sh
  C2D_APP_IMAGE_TAG_FILE: $(Pipeline.Workspace)/app-image-tag.txt
  C2D_APP_IMAGE_NAME_FILE: $(Pipeline.Workspace)/app-image-name.txt
  C2D_CONFIG_IMAGE_TAG_FILE: $(Pipeline.Workspace)/config-image-tag.txt
  C2D_CONFIG_IMAGE_NAME_FILE: $(Pipeline.Workspace)/config-image-name.txt
  C2D_OPTS_APP: >-
    --get-image-name=$(C2D_APP_IMAGE_NAME_FILE)
    --get-image-tag=$(C2D_APP_IMAGE_TAG_FILE)
  C2D_OPTS_CONFIG: >-
    --get-image-name=$(C2D_CONFIG_IMAGE_NAME_FILE)
    --get-image-tag=$(C2D_CONFIG_IMAGE_TAG_FILE)
  IMAGE_VERSION: 1.0.0-SNAPSHOT.$(Build.BuildId)
  IOM_REPO_NAME: $(IOM_INTERNAL_ACR_HOST)

steps:
- script: |
    # stop on any error
    set -e

    echo '##[debug] install tools'
    sudo apt update
    sudo apt install -y maven unzip
  timeoutInMinutes: "3"
  displayName: "Install tools"
  
- task: HelmInstaller@1
  displayName: Helm installer
  
- checkout: self
  path: s/order-iom-project-archetype
  timeoutInMinutes: "5"
  displayName: "checkout order-iom-project-archetype@$(Build.SourceBranchName)"
  #enabled: false
  
- checkout: ${{variables.IOM_HELM_CHART_REPO_URL}}@${{variables.IOM_HELM_CHART_BRANCH}}
  path: s/$(IOM_HELM_CHART_PATH)
  displayName: checkout order-iom-helm@$(IOM_HELM_CHART_BRANCH)
  #enabled: false
  timeoutInMinutes: "5"

- task: Cache@2
  inputs:
    # according to https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch
    # this variable expansion should not work, but it's the only way I got to work.
    key: 'mvn_repo_cache_archetype'
    path: "$(M2_LOCAL_REPO)"
    cacheHitVar: M2_REPO_CACHE_HIT
  timeoutInMinutes: 5
  displayName: "create/restore local maven cache at $(M2_LOCAL_REPO)"
  
- task: MavenAuthenticate@0
  inputs:
    artifactsFeeds: order-iom-externallibs, order-iom-snapshots, order-iom-releases
  timeoutInMinutes: 1
  displayName: "Maven authenticate"
  
# - task: Docker@2
#   inputs:
#     command: login
#     containerRegistry: $(IOM_DOCKERHUB_CONNECTION)
#   timeoutInMinutes: 1
#   displayName: "Login to docker hub"

- task: Maven@3
  inputs:
    goals: clean verify
    mavenPomFile: 'order-iom-project-archetype/pom.xml'
    mavenOptions: '-Xmx1024m $(MAVEN_OPTS)'

- task: Docker@2
  inputs:
    command: login
    containerRegistry: $(IOM_INTERNAL_ACR_CONNECTION)
  timeoutInMinutes: 1
  displayName: Login - Internal ACR

- task: Docker@2
  inputs:
    command: login
    containerRegistry: $(IOM_CI_ACR_CONNECTION)
  timeoutInMinutes: 1
  displayName: Login - CI ACR


# run build_image.sh script from the created archive
- script: |
    # stop on any error
    set -e

    chmod +x $PIPELINE_WORKSPACE/s/order-iom-project-archetype/target/test-classes/projects/basic/project/blueprint-test/build_image.sh
    $PIPELINE_WORKSPACE/s/order-iom-project-archetype/target/test-classes/projects/basic/project/blueprint-test/build_image.sh
    docker tag "$(cat $C2D_APP_IMAGE_NAME_FILE):$(cat $C2D_APP_IMAGE_TAG_FILE)" \
    "$IOM_CI_ACR_HOST/$(cat $C2D_APP_IMAGE_NAME_FILE):$(cat $C2D_APP_IMAGE_TAG_FILE)" 
    docker tag "$(cat $C2D_CONFIG_IMAGE_NAME_FILE):$(cat $C2D_CONFIG_IMAGE_TAG_FILE)" \
    "$IOM_CI_ACR_HOST/$(cat $C2D_CONFIG_IMAGE_NAME_FILE):$(cat $C2D_CONFIG_IMAGE_TAG_FILE)" 
    docker push "$IOM_CI_ACR_HOST/$(cat $C2D_APP_IMAGE_NAME_FILE):$(cat $C2D_APP_IMAGE_TAG_FILE)" 
    docker push "$IOM_CI_ACR_HOST/$(cat $C2D_CONFIG_IMAGE_NAME_FILE):$(cat $C2D_CONFIG_IMAGE_TAG_FILE)" 

  timeoutInMinutes: "10"
  displayName: "build & push caas images"

# - task: HelmDeploy@0
#   displayName: helm install iom
#   inputs:
#     azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
#     azureResourceGroup: $(azureResourceGroup)
#     kubernetesCluster: $(kubernetesCluster)
#     command: install
#     chartType: FilePath
#     chartPath: s/$(IOM_HELM_CHART_PATH)
#     arguments: FAIL
